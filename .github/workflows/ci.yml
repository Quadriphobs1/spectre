name: ci

on: [push, pull_request]

jobs:
  style:
    name: check style
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@master

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --release -- -D clippy::all
  test:
    name: check test
    needs: [style]
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        build: [stable, beta, nightly]

        include:
          - build: stable
            rust: stable
          - build: beta
            rust: beta
          - build: nightly
            rust: nightly
            benches: true
    steps:
      - uses: actions/checkout@master
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.build || 'stable' }}
          profile: minimal
          override: true

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-targets --verbose ${{ matrix.features }}

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose ${{ matrix.features }}

  coverage:
    name: codecov
    runs-on: ubuntu-latest
    needs: [style]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: cargo-tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: latest
      - run: cargo tarpaulin --out Xml -- --test-threads 1

      - name: upload-codecov
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: archive-result
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
